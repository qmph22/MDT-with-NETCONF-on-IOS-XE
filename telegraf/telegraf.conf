# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs (except for execd where it will collect as soon as there is data)
  interval = "30s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000
  hostname = "docker-host"
  omit_hostname = false

### NETCONF via dial-in subscription (sends establish-subscription RPC and listens for replies in the same session)

[[inputs.execd]]
  command = ["python3", "/opt/monitoring/telegraf/netconf-streaming-telemetry.py"]
  data_format = "json"
  json_name_key = "field"
  tag_keys = [
    "hostname", "name", "process_id", "time_period"
  ]

#### NETCONF vManage is Connected ####

[[inputs.exec]]
  ## Commands array
  commands = [
    "python3 /opt/monitoring/telegraf/exec-netconf-vmanage-is-connected.py"
  ]
  json_name_key = "field"
  tag_keys = [
    "hostname"
  ]
  timeout = "60s"
  data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]

#### NETCONF SD-WAN BFD Sessions ####

[[inputs.exec]]
  ## Commands array
  commands = [
    "python3 /opt/monitoring/telegraf/exec-netconf-bfd-sessions.py"
  ]
  json_name_key = "field"
  tag_keys = [
    "hostname",
    "protocol",
    "remote-system-ip",
    "remote-site-id",
    "local-color",
    "remote-color"
  ]
  timeout = "60s"
  data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


#### NETCONF INTERFACES STATS COLLECTION ####

# [[inputs.exec]]
#   ## Commands array
#   commands = [
#     "python3 /opt/monitoring/telegraf/netconf-interfaces.py"
#   ]
#   json_name_key = "field"
#   tag_keys = [
#     "name"
#   ]
#   timeout = "60s"
#   data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


# #### NETCONF CPU FREED MEMORY STATS COLLECTION ####

# [[inputs.exec]]
#   ## Commands array
#   commands = [
#     "python3 /opt/monitoring/telegraf/netconf-memory-by-process.py"
#   ]
#   json_name_key = "field"
#   tag_keys = [
#     "name",
#     "process_id",
#   ]
#   timeout = "60s"
#   data_format = "json"

# # [[outputs.file]]
# #     files = ["stdout"]


# [[inputs.exec]]
#   ## Commands array
#   commands = [
#     "python3 /opt/monitoring/telegraf/netconf-cpu.py"
#   ]
#   json_name_key = "field"
#   tag_keys = [
#     "time_period"
#   ]
#   timeout = "60s"
#   data_format = "json"

# # [[outputs.file]]
# #     files = ["stdout"]

# #### NETCONF MEMORY POOL STATS COLLECTION ####


# [[inputs.exec]]
#   ## Commands array
#   commands = [
#     "python3 /opt/monitoring/telegraf/netconf-memory-pools.py"
#   ]
#   json_name_key = "field"
#   tag_keys = [
#     "name"
#   ]
#   timeout = "60s"
#   data_format = "json"

# # [[outputs.file]]
# #     files = ["stdout"]


# #### NETCONF CELLULAR MODEM STATS COLLECTION ####

# [[inputs.exec]]
#   ## Commands array
#   commands = [
#     "python3 /opt/monitoring/telegraf/netconf-cellular.py"
#   ]
#   json_name_key = "field"
#   tag_keys = [
#     "name"
#   ]
#   timeout = "60s"
#   data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


# # Configuration for the Prometheus client to spawn
[[outputs.prometheus_client]]
#   ## Address to listen on
    listen = ":9273"
    metric_version = 2
